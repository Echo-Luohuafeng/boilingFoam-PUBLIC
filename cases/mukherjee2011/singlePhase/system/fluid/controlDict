/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//- Useful parameters

//- Time scale t0
t0 1.373e-3;

application     interFoamHardtPhaseChange;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.002;

deltaT         1e-10;

writeControl    adjustableRunTime;

writeInterval   0.00005;

purgeWrite      0;

writeFormat     binary;

writePrecision  12;

writeCompression uncompressed;

timeFormat      general;

timePrecision   10;

runTimeModifiable no;

adjustTimeStep  yes;

maxCo           0.1;
maxAlphaCo      0.1;
maxDeltaT       1.0;//#calc "1e-3*$t0";;
maxCapillaryNum 0.5;

functions
{
    bubbleVol
       {
           libs ("libutilityFunctionObjects.so");
           type coded;
           name bubbleVol;
           writeControl timeStep;
           writeInterval 1;
           active yes;
           codeWrite
           #{
                const volScalarField& alpha =
                    mesh().lookupObject<volScalarField>("alpha.vapour");
                scalar bubbleV(0);
                bubbleV = fvc::domainIntegrate(alpha).value();

                if (Pstream::master()){
                   std::ofstream file;
                   file.open ("bubbleInfo.csv", std::ofstream::out | std::ofstream::app);
                   file << mesh().time().value() << " , " << bubbleV <<  std::endl;
                   file.close();
                }
           #};
       }

}
// ************************************************************************* //
